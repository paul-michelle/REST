version: "3"

services:

  nginx:
    image: nginx:1.21-alpine
    restart: always
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - static_volume:/home/street_food/web/staticfiles
      - media_volume:/home/street_food/web/mediafiles
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    restart: always
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  web:
    env_file:
      - web_prod.env
    image: lieberpaul/tickets:mongoCluster
    entrypoint: [ "sh", "/home/street_food/web/entrypoint.prod.sh" ]
    command: gunicorn street_food_project.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/street_food/web/staticfiles
      - media_volume:/home/street_food/web/mediafiles
    expose:
      - 8000
    depends_on:
      - db
      - redis

  db:
    image: postgres:13-alpine
    env_file:
      - db_prod.env
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis:6.0-alpine3.14

  celery:
    env_file:
      - web_prod.env
    image: lieberpaul/tickets:mongoCluster
    restart: always
    entrypoint: [ "sh", "/home/street_food/web/entrypoint.celery.sh" ]
    depends_on:
      - redis

  celery_beat:
    env_file:
      - web_prod.env
    image: lieberpaul/tickets:mongoCluster
    restart: always
    entrypoint: [ "sh", "/home/street_food/web/entrypoint.celery-beat.sh" ]
    depends_on:
      - redis

volumes:
  postgres_data:
  static_volume:
  media_volume: